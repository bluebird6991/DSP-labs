%### 2 Филтьтр WAV ###%
function Hd = FIR_WAV
%FIR_WAV Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.5 and DSP System Toolbox 9.7.
% Generated on: 14-Apr-2020 10:28:58

% Equiripple Bandpass filter designed using the FIRPM function.

% All frequency values are in Hz.
Fs = 25000;  % Sampling Frequency

Fstop1 = 20;              % First Stopband Frequency
Fpass1 = 40;              % First Passband Frequency
Fpass2 = 80;              % Second Passband Frequency
Fstop2 = 200;             % Second Stopband Frequency
Dstop1 = 0.001;           % First Stopband Attenuation
Dpass  = 0.057501127785;  % Passband Ripple
Dstop2 = 0.0001;          % Second Stopband Attenuation
dens   = 20;              % Density Factor

% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
                          0], [Dstop1 Dpass Dstop2]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

% [EOF]

[x, fs] = audioread('rock.wav');

zone = x(: ,1);
N = length(zone);

Xm = 2*(abs(fft(zone)))/N;
F = (0 : N - 1) * fs / N;
subplot(2, 1, 1);
plot(F, Xm); grid on; title('Исходный ДПФ');

filteredx = filter(Hd, zone);
xfft = abs(fft(filteredx(: ,1)));
Xm = 2*(xfft)/N;
F = (0 : N - 1) * fs / N;
subplot(2, 1, 2);
plot(F, Xm); grid on; title('ДПФ с фильтром');
sound(3*filteredx, fs);